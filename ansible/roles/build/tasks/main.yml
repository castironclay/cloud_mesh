---
# Update fact prior to template
- set_fact:
    hop_name: "{{ hop1_name }}"

- name: Copy main.tf 1
  template:
    src: "{{ provider1 }}.tf.tmpl"
    dest: "{{ project_path }}/hop1_{{ provider1 }}.tf"

- name: Move vars file 1
  template:
    src: "{{ provider1 }}/vars.tf"
    dest: "{{ project_path}}/modules/hop1_{{ provider1 }}/vars.tf"

- name: Set name for resources
  replace:
    path: "{{ project_path}}/modules/hop1_{{ provider1 }}/vars.tf"
    regexp: "namenamenamename"
    replace: "{{ hop1_resource_name }}1"

- name: Set private key
  replace:
    path: "{{ project_path}}/modules/hop1_{{ provider1 }}/vars.tf"
    regexp: "prikey"
    replace: "id_ssh_rsa1"

- name: Set public key
  replace:
    path: "{{ project_path}}/modules/hop1_{{ provider1 }}/vars.tf"
    regexp: "pubkey"
    replace: "id_ssh_rsa1.pub"

- name: Set wireguard port
  replace:
    path: "{{ project_path}}/modules/hop1_{{ provider1 }}/vars.tf"
    regexp: "wireguardport"
    replace: "{{ wg_port1 }}"

# Update fact prior to template
- set_fact:
    hop_name: "{{ hop2_name }}"

- name: Copy main.tf 2
  template:
    src: "{{ provider2 }}.tf.tmpl"
    dest: "{{ project_path }}/hop2_{{ provider2 }}.tf"

- name: Move vars file 2
  template:
    src: "{{ provider2 }}/vars.tf"
    dest: "{{ project_path }}/modules/hop2_{{ provider2 }}/vars.tf"

- name: Set name for resources
  replace:
    path: "{{ project_path}}/modules/hop2_{{ provider2 }}/vars.tf"
    regexp: "namenamenamename"
    replace: "{{ hop2_resource_name }}2"

- name: Set private key
  replace:
    path: "{{ project_path}}/modules/hop2_{{ provider2 }}/vars.tf"
    regexp: "prikey"
    replace: "id_ssh_rsa2"

- name: Set public key
  replace:
    path: "{{ project_path}}/modules/hop2_{{ provider2 }}/vars.tf"
    regexp: "pubkey"
    replace: "id_ssh_rsa2.pub"

- name: Set wireguard port
  replace:
    path: "{{ project_path}}/modules/hop2_{{ provider2 }}/vars.tf"
    regexp: "wireguardport"
    replace: "{{ wg_port2 }}"

- name: AWS shuffle regions
  terraform:
    project_path: "{{ project_path }}"
    force_init: true
    state: present
    targets: ["module.hop1_aws.random_shuffle.regions", "module.hop2_aws.random_shuffle.regions"]
  when: provider1 == "aws" or provider2 == "aws"
  register: deployment

- name: Exoscale shuffle regions
  terraform:
    project_path: "{{ project_path }}"
    force_init: true
    state: present
    targets: ["module.hop1_exoscale.data.exoscale_template.my_template", "module.hop2_exoscale.data.exoscale_template.my_template"]
  when: provider1 == "exoscale" or provider2 == "exoscale"
  register: deployment

- name: Deploy resources
  terraform:
    project_path: "{{ project_path }}"
    force_init: true
    state: present
  register: deployment

- name: Host 1
  include_tasks: host1.yml

- name: Host 2
  include_tasks: host2.yml
