---
- name: Modify
  hosts: localhost
  tasks:
    - name: Get deployment info from Dynamodb
      ansible.builtin.shell: "python3 /skyhook/get_dynamo.py {{ projectname }} | jq -r .Item"
      register: json

    - name: Convert output to proper json
      ansible.builtin.set_fact:
        jsondata: "{{ json.stdout | from_json }}"

    - name: Set hop0 IP
      ansible.builtin.set_fact:
        hop0_ip: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'hop0_ip'

    - name: Set hop1 IP
      ansible.builtin.set_fact:
        hop1_ip: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'hop1_ip'

    - name: Set hop2 IP
      ansible.builtin.set_fact:
        hop2_ip: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'hop2_ip'

    - name: Set username
      ansible.builtin.set_fact:
        username: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'username'

    - name: Set projectname
      ansible.builtin.set_fact:
        projectname: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'projectname'

    - name: Add hop0 host
      add_host:
        name: hop0
        ansible_host: "{{ hop0_ip }}"
        groups: "modify"
        ansible_ssh_private_key_file: "/skyhook/projects/{{ projectname }}/id_rsa"
        ansible_user: "{{ username }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_python_interpreter: /usr/bin/python3

    - name: Add hop1 host
      add_host:
        name: hop1
        ansible_host: "{{ hop1_ip }}"
        groups: "modify"
        ansible_ssh_private_key_file: "/skyhook/projects/{{ projectname }}/id_rsa"
        ansible_user: "{{ username }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_python_interpreter: /usr/bin/python3

    - name: Add hop2 host
      add_host:
        name: hop2
        ansible_host: "{{ hop2_ip }}"
        groups: "modify"
        ansible_ssh_private_key_file: "/skyhook/projects/{{ projectname }}/id_rsa"
        ansible_user: "{{ username }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_python_interpreter: /usr/bin/python3

- hosts: modify
  tasks:
    - name: Create random port 1
      set_fact:
        hop0_ipt_port_random: "{{ (50000) | random(start=20000) }}"
      run_once: true

    - name: Create random port 2
      set_fact:
        hop1_ipt_port_random: "{{ (50000) | random(start=20000) }}"
      run_once: true

    - name: Create random port 3
      set_fact:
        hop2_ipt_port_random: "{{ (50000) | random(start=20000) }}"
      run_once: true

    - name: Foward from hop2 to hop1 - 1
      ansible.builtin.shell:
        cmd: "iptables -t nat -I PREROUTING -p tcp --dport {{ hop2_ipt_port_random }} -j DNAT --to-destination 10.0.0.2:{{ hop2_ipt_port_random }}"
      become: true
      when: inventory_hostname == 'hop2'

    - name: Foward from hop2 to hop1 - 2
      ansible.builtin.shell:
        cmd: "ip netns exec wireguard iptables -t nat -I PREROUTING -p tcp --dport {{ hop2_ipt_port_random }} -j DNAT --to-destination 10.1.1.2:{{ hop1_ipt_port_random }}"
      become: true
      when: inventory_hostname == 'hop2'

    - name: NAT from hop2 to hop1
      ansible.builtin.shell:
        cmd: "ip netns exec wireguard iptables -t nat -I POSTROUTING -p tcp --dport {{ hop1_ipt_port_random }} -d 10.1.1.2/32 -o wg1 -j MASQUERADE"
      become: true
      when: inventory_hostname == 'hop2'

    - name: Foward from hop1 to hop0
      ansible.builtin.shell:
        cmd: "ip netns exec wireguard iptables -t nat -I PREROUTING -p tcp --dport {{ hop1_ipt_port_random }} -j DNAT --to-destination 10.2.1.2:{{ hop0_ipt_port_random }}"
      become: true
      when: inventory_hostname == 'hop1'

    - name: NAT from hop1 to hop0
      ansible.builtin.shell:
        cmd: "ip netns exec wireguard iptables -t nat -I POSTROUTING -p tcp --dport {{ hop0_ipt_port_random }} -d 10.2.1.2/32 -o wg2 -j MASQUERADE"
      become: true
      when: inventory_hostname == 'hop1'